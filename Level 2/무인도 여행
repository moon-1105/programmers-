def solution(maps):
    answer = []
    N, M = len(maps), len(maps[0])
    history = []
    for _ in range(0,N):
        history.append([0]*M)
    방향=[[1,0],[-1,0],[0,1],[0,-1]]
    for i in range(0,N):
        for j in range(0,M):
            que = []
            res = 0
            if history[i][j] == 0 and maps[i][j]!='X':
                #시작
                history[i][j] = 1
                que.append([i,j])
                while len(que)!=0:
                    now = que.pop()
                    res += int(maps[now[0]][now[1]])
                    for d in 방향:
                        x = now[0]+d[0]
                        y = now[1]+d[1]
                        if x>=0 and x < N and y>=0 and y < M:
                            if history[x][y]==0 and maps[x][y]!='X':
                                que.append([x,y])
                                history[x][y] = 1
                #print(res)
                answer.append(res)
    if len(answer) == 0:
        return [-1]
    answer.sort()
    return answer
