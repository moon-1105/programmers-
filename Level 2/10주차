def findCross(a, b):
    if a[0]*b[1] - a[1]*b[0] !=0 :
        x = (a[1]*b[2] - a[2]*b[1]) / (a[0]*b[1] - a[1]*b[0])
        y = (a[2]*b[0] - a[0]*b[2]) / (a[0]*b[1] - a[1]*b[0])
    else:
        return 0,0
    
    return x, y
    
def solution(line):
    answer,res = [],[]
    N = len(line)
    maxX, maxY, minX, minY = 0, 0, 0, 0
    for i in range(0, N):
        for j in range(i, N):
            if i!=j:
                x, y = findCross(line[i], line[j])
                #print(line[i], line[j], "=>",x, y)
                #print("==============")
                if x == int(x) and y == int(y):
                    maxX = max(maxX, int(x))
                    minX = min(minX, int(x))
                    maxY = max(maxY, int(y))
                    minY = min(minY, int(y))
                    res.append([int(x), int(y)])
    print(maxX, minX, maxY, minY)
    print(res)
    if minX < 0:
        보정값x = -minX
    else:
        보정값x = minX
    if minY < 0:
        보정값y = -minY
    else:
        보정값y = minY
        
    for ele in res:
        ele[0], ele[1] = ele[0]+보정값x, ele[1]+보정값y
    print("보정값 => ",res)
    maxX+=보정값x
    maxY+=보정값y
    mapp = []
    for i in range(0, maxX+1):
        mapp.append(['.']*(maxY+1))
    for ele in res:
        mapp[ele[0]][ele[1]] = '*'
    
    for row in mapp:
        print(row)
        
        
    
        
        
    
    
    return answer
