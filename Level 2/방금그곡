def getDuration(time1, time2):
    return int(time2[0:2])*60 + int(time2[3:]) - int(time1[0:2])*60 + int(time1[3:])

def getMusic(music):
    notes = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"]
    N = len(music)
    arr, idx = [], 0
    while idx < N:
        if music[idx] == "#":
            arr.pop()
            arr.append(notes.index(music[idx-1]+music[idx]))
        else:
            arr.append(notes.index(music[idx]))
        idx+=1
    #print(arr)
    return arr

def getMusicInfo(time, music):
    _music = getMusic(music)
    N = len(music)
    song = _music*(time//N) + _music[:(time%N)+1]
    return song, _music

def have(origin, candidate):
    #print(origin, candidate[2])
    if origin[0] in candidate:
        start = candidate.index(origin[0])
    else:
        return False
    idx, jdx, N, M = start, 0, len(candidate), len(origin)
    while jdx < M and idx < N:
        if origin[jdx] != candidate[idx]:
            return False
        idx+=1
        jdx+=1
    
    return True

def solution(m, musicinfos):
    candidate = []
    for music in musicinfos:
        musicinfo = music.split(",")
        time = getDuration(musicinfo[0],musicinfo[1])
        title = musicinfo[2]
        song, originSong = getMusicInfo(time, musicinfo[3])
        candidate.append([time,title,song, originSong])
    #print(candidate)
    answer = []
    m = getMusic(m)
    answer = []
    for ele in candidate:
        if have(m, ele[2]):
            answer.append(ele)
    if len(answer)>=2:
        sorted(answer, key=lambda song: song[0])
    if len(answer)==0:
        return "(None)"
    return answer[0][1]
