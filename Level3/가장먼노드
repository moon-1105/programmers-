from collections import deque, defaultdict
# dict으로 인접행렬을 만드는게 핵심

def findShort(now, graph):
    q = deque()
    q.append((now, 0))
    visited = set()
    visited.add(now)
    #가장 먼 노드의 개수를 세는 dict
    numbers = defaultdict(lambda :0)
    while q:
        #print(q)
        now, val = q.popleft()
        visited.add(now)
        for e in graph[now]:
            if e not in visited:
                # 다음에 닿을 수 있는게 하나 더 늘어나는거니까
                visited.add(e)
                numbers[val+1] += 1
                q.append((e, val+1))
   # print(numbers)
    return numbers[val]

def solution(n, edge):
    answer = 0
    graph = defaultdict(set)
    for a, b  in edge:
        graph[a].add(b)
        graph[b].add(a)
    answer = findShort(1, graph)
    return answer
