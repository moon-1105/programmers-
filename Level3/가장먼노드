# 1번 노드에서 가장 멀리 떨어진 노드의 갯수
# 가장 멀리 떨어진 노드란 최단경로로 이동했을 때 간선의 개수가 가장 많은 노드
def printg(graph):
    for g in graph:
        print(g)
    print()
def solution(n, edge):
    answer = 0
    graph = []
    for _ in range(n+1):
        graph.append([5000]*(n+1))
    for e in edge:
        graph[e[0]][e[1]] = 1 
        graph[e[1]][e[0]] = 1 
    #printg(graph)
    
    for k in range(1, n+1):
        for i in range(1, n+1):
            for j in range(1, n+1):
                if i!=j:
                    graph[i][j] = min(graph[i][j], graph[i][k]+graph[k][j])
                    graph[j][i] = graph[i][j] 
        #printg(graph)
    Max = 0
    for g in graph[1]:
        if g!=5000 and Max < g:
            Max = g
    #print(Max)
    for g in graph[1]:
        if g == Max:
            answer += 1
    #print(answer)
    return answer
